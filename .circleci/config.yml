version: 2.1
env:
  SFDX_LOG_LEVEL: DEBUG
jobs:
  pipeline-prep:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Login to Org
          command: . build/login_to_sandbox.sh
      - run:
          name: Run Apex Tests
          command: . build/run_apex_tests.sh
      - store_test_results:
          path: test-results
  code-review:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: SFDX Scanner Analysis
          command: . build/run_sfdx_scanner.sh
      - store_artifacts:
          path: sfdxScannerAnalysis.csv
  deploy-code:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: "Creating Dummy Artifacts"
          command: . build/create_artifact.sh
      - run:
          name: "Install Dependencies"
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Login to Org
          command: . build/login_to_sandbox.sh  #login_to_org.sh
      - run:
          name: Deploy to Org
          command: . build/deploy_code.sh
      - store_artifacts:
          path: /tmp/art-1
          destination: artifact-file
      - store_artifacts:
          path: /tmp/artifacts
workflows:
  version: 2
  validate:
    jobs:
      - pipeline-prep
      - code-review:
          requires:
            - pipeline-prep
      - deploy-code:
          requires:
            - code-review
